/*
 *  BSD LICENSE
 *
 *  Copyright(c) 2015 Broadcom Corporation.  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in
 *      the documentation and/or other materials provided with the
 *      distribution.
 *    * Neither the name of Broadcom Corporation nor the names of its
 *      contributors may be used to endorse or promote products derived
 *      from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/dts-v1/;

#include "bcm-cygnus.dtsi"
#include "bcm9hmidc.dtsi"

/ {
	model = "Cygnus Wireless Audio (BCM958305K)";
	compatible = "brcm,bcm58305", "brcm,cygnus";

	aliases {
		serial0 = &uart3;
		serial1 = &uart0;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	axi {
		pinctrl: pinctrl@0x0301d0c8 {
			pinctrl-names = "default";
			pinctrl-0 = <&i2s_0>;
		};
	};

	sound {
/*		compatible = "bcm,cygnussvk-machine"; */
		compatible = "bcm,cygnus-hoka-machine";
		bcm,cygnus-pcm = <&cygnus_audio>;

/* -----------------------------------------------
		bcm,cygnus-link0-ssp = "cygnus-ssp0";
		bcm,cygnus-link0-mode = "tdm";
		bcm,cygnus-link0-slave = <1>;
		bcm,cygnus-link0-frame-width = <128>;
		bcm,cygnus-link1-slave = <0>;
		bcm,cygnus-link1-ssp = "cygnus-ssp1";
		bcm,cygnus-link2-slave = <0>;
		bcm,cygnus-link2-ssp = "cygnus-ssp1";
		bcm,cygnus-link3-slave = <0>;
		bcm,cygnus-link3-ssp = "cygnus-ssp1";
 ---------------------------------------------- */
/* ----------------------------------------------- */


		bcm,cygnus-link0-codec = <&tlv320aic34_1A>;
		bcm,cygnus-link0-ssp = "cygnus-ssp0";
		bcm,cygnus-link0-mode = "tdm";
		bcm,cygnus-link0-slave = <1>;
		bcm,cygnus-link0-frame-width = <256>;

		bcm,cygnus-link1-codec = <&tlv320aic34_1B>;
		bcm,cygnus-link1-ssp = "cygnus-ssp0";
		bcm,cygnus-link1-mode = "tdm";
		bcm,cygnus-link1-slave = <1>;
		bcm,cygnus-link1-frame-width = <256>;

		bcm,cygnus-link2-codec = <&tlv320aic34_2A>;
		bcm,cygnus-link2-ssp = "cygnus-ssp0";
		bcm,cygnus-link2-mode = "tdm";
		bcm,cygnus-link2-slave = <1>;
		bcm,cygnus-link2-frame-width = <256>;

		bcm,cygnus-link3-codec = <&tlv320aic34_2B>;
		bcm,cygnus-link3-ssp = "cygnus-ssp0";
		bcm,cygnus-link3-mode = "tdm";
		bcm,cygnus-link3-slave = <1>;
		bcm,cygnus-link3-frame-width = <256>;
/* ---------------------------------------------- */

		status = "okay";

	};
};

&i2c0 {
	clock-frequency = <400000>;
	status = "okay";
		pca9532_1: pca9532@60 {
			compatible = "nxp,pca9532";
			nxp,typecodes = <0x00555555>;
			nxp,statecodes = <0x00000000>;
			reg = <0x60>;
		};
		pca9532_2: pca9532@64 {
			compatible = "nxp,pca9532";
			nxp,typecodes = <0x00555555>;
			nxp,statecodes = <0x00000000>;
			reg = <0x64>;
		};
		pca9532_3: pca9532@66 {
			compatible = "nxp,pca9532";
			nxp,typecodes = <0x00555555>;
			nxp,statecodes = <0x00000000>;
			reg = <0x66>;
		};
	};

&i2c1 {
	clock-frequency = <100000>;
	status = "okay";
	tlv320aic34_1A: tlv320aic33@18 {
		compatible = "ti,tlv320aic33";
		reg = <0x18>;
/* -- Set a minimal for now
		gpio-reset = <&gpio_asiu 126 0>;
			ai3x-micbias-vg = <2>;
-------- */			
		ai3x-gpio-func = <
				2 /* AIC3X_GPIO1_FUNC_CLOCK_MUX  */
				0 /* AIC3X_GPIO2_FUNC_DISABLED */
			>;
		status = "okay";

	};
	tlv320aic34_1B: tlv320aic33@19 {
		compatible = "ti,tlv320aic33";
		reg = <0x19>;
/* -- Set a minimal for now
		gpio-reset = <&gpio_asiu 126 0>;
			ai3x-micbias-vg = <2>;
-------- */			
		ai3x-gpio-func = <
				0 /* AIC3X_GPIO1_FUNC_DISABLED  */
				0 /* AIC3X_GPIO2_FUNC_DISABLED */
			>;
		status = "okay";

	};
	tlv320aic34_2A: tlv320aic33@1a {
		compatible = "ti,tlv320aic33";
		reg = <0x1a>;
/* -- Set a minimal for now
		gpio-reset = <&gpio_asiu 126 0>;
			ai3x-micbias-vg = <2>;
-------- */			
		ai3x-gpio-func = <
				0 /* AIC3X_GPIO1_FUNC_DISABLED  */
				0 /* AIC3X_GPIO2_FUNC_DISABLED */
			>;
		status = "okay";

	};
	tlv320aic34_2B: tlv320aic33@1b {
		compatible = "ti,tlv320aic33";
		reg = <0x1b>;
/* -- Set a minimal for now
		gpio-reset = <&gpio_asiu 126 0>;
			ai3x-micbias-vg = <2>;
-------- */			
		ai3x-gpio-func = <
				0 /* AIC3X_GPIO1_FUNC_DISABLED  */
				0 /* AIC3X_GPIO2_FUNC_DISABLED */
			>;
		status = "okay";

	};
	xavier: xavier@1c {
		reg = <0x1c>;
		compatible = "xavier";
		gpio = <&gpio_ccm 8 1>;
		reset-gpio = <&gpio_ccm 9 0>;
		btn0 = <0x100>;
		btn1 = <0x101>;
		btn_wheel = <0x150>;
		abs_wheel = <0x08>;
		direction = <0x34>;
		velocity = <0x28>;
		status = "okay";
	};
};

&pcie0 {
	status = "okay";
};

&pcie1 {
	status = "okay";
};

&uart0 {
	status = "okay";
};

&uart3 {
	status = "okay";
};

&nand {
	nandcs@1 {
		compatible = "brcm,nandcs";
		reg = <0>;
		nand-on-flash-bbt;

		#address-cells = <1>;
		#size-cells = <1>;

		nand-ecc-strength = <8>;
		nand-ecc-step-size = <512>;

		brcm,nand-oob-sector-size = <16>;
	};

};

&ehci0 {
		phys = <&usbphy0 0 1 &usbphy0 2 1>;
		phy-names = "usbp0", "usbp2";
		status = "okay";
};

&bbl {
	rtc-enable;
	tamper-enable;
	status = "okay";
};

